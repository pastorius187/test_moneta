package com.example.nbaapp

import android.app.Application
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import dagger.hilt.android.HiltAndroidApp
import dagger.hilt.android.lifecycle.HiltViewModel
import dagger.hilt.android.qualifiers.ApplicationContext
import dagger.hilt.android.scopes.ViewModelScoped
import dagger.hilt.android.components.ViewModelComponent
import dagger.hilt.android.internal.managers.ViewComponentManager.FragmentContextWrapper
import dagger.hilt.installers.SingletonComponentInstaller
import dagger.hilt.components.SingletonComponent
import kotlinx.coroutines.flow.MutableStateFlow
import kotlinx.coroutines.flow.StateFlow
import kotlinx.coroutines.flow.asStateFlow
import kotlinx.coroutines.launch
import retrofit2.Retrofit
import retrofit2.converter.gson.GsonConverterFactory
import retrofit2.http.GET
import retrofit2.http.Query
import javax.inject.Inject
import javax.inject.Singleton


// --- UI ---
@Composable
fun PlayerList(viewModel: NBAViewModel, onPlayerClick: (Player) -> Unit) {
    val players by viewModel.players.collectAsState()

    LazyColumn {
        items(players) { player ->
            PlayerItem(player, onPlayerClick)
        }
    }
}

@Composable
fun PlayerItem(player: Player, onPlayerClick: (Player) -> Unit) {
    Card(
        modifier = Modifier
            .fillMaxWidth()
            .padding(8.dp)
            .clickable { onPlayerClick(player) }
    ) {
        Column(modifier = Modifier.padding(16.dp)) {
            Text(text = "${player.first_name} ${player.last_name}", style = MaterialTheme.typography.bodyLarge)
            Text(text = "Pozice: ${player.position ?: "Neznámá"}", style = MaterialTheme.typography.bodyMedium)
            Text(text = "Tým: ${player.team.full_name}", style = MaterialTheme.typography.bodyMedium)
        }
    }
}

@Composable
fun PlayerDetail(player: Player) {
    Column(modifier = Modifier.padding(16.dp)) {
        Text(text = "${player.first_name} ${player.last_name}", style = MaterialTheme.typography.headlineMedium)
        Text(text = "Pozice: ${player.position ?: "Neznámá"}", style = MaterialTheme.typography.bodyLarge)
        Text(text = "Tým: ${player.team.full_name}", style = MaterialTheme.typography.bodyLarge)
    }
}

// --- Main Activity ---
@AndroidEntryPoint
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            val viewModel: NBAViewModel = hiltViewModel()
            PlayerList(viewModel) { player ->
                startActivity(
                    Intent(this, PlayerDetailActivity::class.java).apply {
                        putExtra("player", player)
                    }
                )
            }
        }
    }
}

// --- PlayerDetailActivity ---
@AndroidEntryPoint
class PlayerDetailActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        val player = intent.getParcelableExtra<Player>("player")
        setContent {
            player?.let { PlayerDetail(it) }
        }
    }
}
