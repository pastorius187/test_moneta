@HiltViewModel
class MainViewModel @Inject constructor(private val repository: NBARepository) : ViewModel() {
    private val _players = MutableStateFlow<List<Player>>(emptyList())
    val players: StateFlow<List<Player>> = _players.asStateFlow()

    private var currentPage = 1

    init {
        loadPlayers()
    }

    fun loadPlayers() {
        viewModelScope.launch {
            val response = repository.getPlayers(currentPage)
            _players.value = _players.value + response.data
            currentPage++
        }
    }
}

package com.example.nbaapp.ui.main

import android.content.Intent
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.viewModels
import dagger.hilt.android.AndroidEntryPoint

@AndroidEntryPoint
class MainActivity : ComponentActivity() {
    private val viewModel: MainViewModel by viewModels()

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            PlayerListScreen(viewModel) { player ->
                startActivity(
                    Intent(this, PlayerDetailActivity::class.java).apply {
                        putExtra("player", player)
                    }
                )
            }
        }
    }
}

